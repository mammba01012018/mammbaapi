registerMember=INSERT INTO MEMBER (member_firstName, member_lastName, member_middleInitial, \
member_gender, member_address1, member_address2, member_province, member_country, member_emailAddress, \
member_mobileNumber, member_birthDate) VALUES (:firstName, :lastName, :middleInitial, :gender, :address1, :address2, \
:province, :country, :emailAddress, :mobileNumber, :birthdate)

registerPartner= INSERT INTO PARTNER (partner_name, partner_IATANumber, partner_companyName, \
partner_address, partner_province, partner_country, partner_telNumber, partner_mobileNumber, \
partner_fax, partner_emailAddress, partner_numOfStaff, partner_tinNumber, partner_agencyType, \
partner_typeOfService, partner_contactPrsonName, partner_contactPrsonPosition, partner_contactPrsonTelNum, \
partner_contactPrsonMobileNum, partner_businessPermit, partner_businessPermitExpiry, partner_DTI, \
partner_SEC) VALUES (:partnerName, :iataNumber, :companyName, :address1, :province, :country, :telNumber, \
:mobileNumber, :fax, :emailAddress, :numOfStaff, :tinNumber, :agencyType, :typeOfService, :contactPersonName, \
:contactPersonPosition, :contactPersonTelNum, :contactPersonMobileNum, :businessPermit, :businessPermitExpiry, \
:DTI, :SEC)
    
addUserAcct= INSERT INTO USER (user_userName, user_password, user_email, user_createTime, user_mobileNumber, \
user_type, member_id, partner_id) VALUES (:username, :password, :email, :creTime, :mobileNumber, \
:userType, :memberId, :partnerId)

getUserDetailByUserNamePassword= SELECT user_userName, user_password, user_email, user_mobileNumber, user_type from USER where \
    ((user_userName = :username AND user_password = :password) OR (user_email = :username AND \
    user_password = :password) OR (user_mobileNumber = :username AND user_password = :password))
    
getUserDetailByUserName= SELECT user_userName, user_password, user_email, user_mobileNumber, user_type from USER where \
    user_userName = :username  OR user_mobileNumber = :username OR user_email = :username
    
getUserEmailByUserId=SELECT user_email from USER where user_id = ?
    
getMemberDetailByUserName=SELECT u.user_id, u.user_userName, u.user_password, u.user_email, u.user_mobileNumber, u.user_type,  \
u.user_stat_id,m.member_id, m.member_firstName, m.member_lastName, m.member_middleInitial, m.member_gender, m.member_address1, \
m.member_address2, m.member_province, m.member_country, m.member_rate, m.member_birthDate from USER u \
inner join MEMBER m on m.member_id = u.member_id WHERE \
u.user_userName = :username  OR u.user_mobileNumber = :username OR u.user_email = :username

getPartnerDetailByUserName=SELECT u.user_id, u.user_userName, u.user_password, u.user_email, u.user_mobileNumber, u.user_type,  \
u.user_stat_id, p.partner_id, p.partner_name, p.partner_IATANumber, p.partner_companyName, p.partner_address, \
p.partner_province, p.partner_country, p.partner_telNumber, p.partner_mobileNumber, p.partner_fax, p.partner_emailAddress \
, p.partner_numOfStaff, p.partner_tinNumber, p.partner_agencyType, p.partner_typeOfService, p.partner_contactPrsonName \
, p.partner_contactPrsonPosition, p.partner_contactPrsonTelNum, p.partner_contactPrsonMobileNum, p.partner_businessPermit \
, p.partner_businessPermitExpiry, p.partner_DTI, p.partner_SEC from USER u \
inner join PARTNER p on p.partner_id = u.partner_id WHERE \
u.user_userName = :username  OR u.user_mobileNumber = :username OR u.user_email = :username

getMemberDetailByUserId=SELECT u.user_id, u.user_userName, u.user_password, u.user_email, u.user_mobileNumber, u.user_type,  \
u.user_stat_id,m.member_id, m.member_firstName, m.member_lastName, m.member_middleInitial, m.member_gender, m.member_address1, \
m.member_address2, m.member_province, m.member_country, m.member_rate, m.member_birthDate from USER u \
inner join MEMBER m on m.member_id = u.member_id WHERE \
u.user_id = :userId

getPartnerDetailByUserId=SELECT u.user_userName, u.user_password, u.user_email, u.user_mobileNumber, u.user_type,  \
u.user_stat_id, p.partner_id, p.partner_name, p.partner_IATANumber, p.partner_companyName, p.partner_address, \
p.partner_province, p.partner_country, p.partner_telNumber, p.partner_mobileNumber, p.partner_fax, p.partner_emailAddress \
, p.partner_numOfStaff, p.partner_tinNumber, p.partner_agencyType, p.partner_typeOfService, p.partner_contactPrsonName \
, p.partner_contactPrsonPosition, p.partner_contactPrsonTelNum, p.partner_contactPrsonMobileNum, p.partner_businessPermit \
, p.partner_businessPermitExpiry, p.partner_DTI, p.partner_SEC from USER u \
inner join PARTNER p on p.partner_id = u.partner_id WHERE \
u.user_id = :userId

IsUserNameExist=SELECT u.user_userName from USER u WHERE u.user_userName = :username

IsEmailExist=SELECT u.user_email from USER u WHERE u.user_email = :email
IsEmailExistExceptId=SELECT u.user_email from USER u WHERE u.user_email = :email AND u.user_id <> :userId

IsMobileNoExist=SELECT u.user_mobileNumber from USER u WHERE u.user_mobileNumber = :mobilenumber
IsMobileNoExistExceptId=SELECT u.user_mobileNumber from USER u WHERE u.user_mobileNumber = :mobilenumber AND u.user_id <> :userId

updateUser=UPDATE USER SET user_mobileNumber = :mobileNumber, user_email = :emailAddress, user_password = :password \
WHERE user_id = :userId

updateUserNoPwd=UPDATE USER SET user_mobileNumber = :mobileNumber, user_email = :emailAddress \
WHERE user_id = :userId

updateMember=UPDATE MEMBER SET member_firstName = :firstName, member_lastName = :lastName, member_middleInitial = :middleInitial, \
member_address1 = :address1, member_emailAddress = :emailAddress, member_mobileNumber = :mobileNumber WHERE \
member_id = :memberId

getAllSecurityQuestions=SELECT secQstnId, secDesc FROM SECRTY_QSTN

getQuestionForUser=SELECT sd.secDesc FROM SECRTY_QSTN sd INNER JOIN SECRTY_ANS_USR sau ON sd.secQstnID = sau.qstn_id \
 WHERE sau.user_id = ? AND sau.actv_sw = 'Y'

getQuestionIdForUser=SELECT qstn_id FROM SECRTY_ANS_USR WHERE user_id = ? AND actv_sw = 'Y'

IsAnswerSecurityCorrect=SELECT secrtyAns FROM SECRTY_ANS_USR WHERE user_id = :userId AND secrtyAns = :securityAnswer \
AND actv_sw = 'Y'

deactivatePreviousSecurityInfo= UPDATE SECRTY_ANS_USR SET actv_sw = 'N' WHERE user_id = :userId AND qstn_id = \
:questionId

addNewSecurityInfo = INSERT INTO SECRTY_ANS_USR VALUES (:userId, :questionId, :securityAnswer, 'Y')

getUserIdFromSecurityQuestion=SELECT u.user_id FROM USER u where u.user_userName = ?  \
OR u.user_mobileNumber = ? OR u.user_email = ?

userUpdateStatus=UPDATE USER SET user_stat_id = :stat WHERE user_id = :userId

updateUserPwd=UPDATE USER SET user_password = :pwd WHERE user_id = :userId